/*
 * createOrderNew.java
 *
 * Created on March 26, 2006, 10:01 PM
 */

package phs_project;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLData;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.JComboBox;
import java.util.*;

/**
 *
 * @author  nhoc
 */
public class insertCustomer extends javax.swing.JDialog {
    
    /** Creates new form createOrderNew */
    public static Vector roomArray ;
    public insertCustomer(JFrame parent,boolean check,String OID) 
    {
        super(parent,check);
        initComponents();              
        PanelKhachQuen.setVisible(false);        
        addItemTooCombobox(type,"select name from customerstype","");        
        customerId.setText(" ");
        firstName.setText("");
        lastName.setText("");
        orderId.setText(hotelForm.ODID);
        //digitalClock clock = new digitalClock(orderdate);
       addItemTooCombobox(cbRooms,"select [Tên phòng] from roomInorder where orderId='"+orderId.getText()+"' and (roomstatusId =5 or roomstatusId =6 or roomstatusId =8) order by [Ngày đến ở] ","");
       new publicClass().addDataToTextField("select * from orders where orderId='"+orderId.getText()+"'","orderDate",orderdate); 
       new publicClass().addDataToTextField("select * from orders where orderId='"+orderId.getText()+"'","Note",Note); 
       new publicClass().addItemToTable(tblCusIinOrder," select firstName +' '+ lastName as [Tên khách hàng] from CusInOrder where orderId='"+orderId.getText()+"'");
      }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        GioitinhG = new javax.swing.ButtonGroup();
        CustomerOld = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        orderdate = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        orderId = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        Note = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblCusIinOrder = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        PanelKhachmoi = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        firstName = new javax.swing.JTextField();
        type = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        idCardNumb = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        visaCardNumb = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        sexMale = new javax.swing.JRadioButton();
        sexFemale = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        age = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        country = new javax.swing.JTextField();
        phone = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        address = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        detail = new javax.swing.JTextArea();
        customerId = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        Khachmoi = new javax.swing.JRadioButton();
        Khachcu = new javax.swing.JRadioButton();
        lastName = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        cbRooms = new javax.swing.JComboBox();
        jButton4 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        PanelKhachQuen = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        Timtenkhach = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        Bangkhachhang = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Th\u00eam kh\u00e1ch v\u00e0o ph\u00f2ng");
        setAlwaysOnTop(true);
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("L\u00e0m th\u1ee7 t\u1ee5c nh\u1eadp ph\u00f2ng cho \u0111\u01a1n h\u00e0ng"));
        jLabel1.setText("Ng\u00e0y \u0111\u1eb7t");

        orderdate.setEditable(false);

        jLabel15.setText("S\u1ed1");

        orderId.setEditable(false);

        jLabel20.setText("Ghi ch\u00fa th\u00eam");

        Note.setEditable(false);

        tblCusIinOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(tblCusIinOrder);

        jLabel17.setText("Danh s\u00e1ch kh\u00e1ch h\u00e0ng \u0111\u00e3 \u0111\u1ebfn");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel15)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 58, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel20))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(orderId, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(Note, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(orderdate, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 197, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(46, 46, 46))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .add(jLabel15)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 28, Short.MAX_VALUE)
                .add(jLabel20)
                .add(43, 43, 43))
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(3, 3, 3)
                        .add(jLabel17)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(orderId, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(orderdate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 7, Short.MAX_VALUE)
                        .add(Note, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 57, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        PanelKhachmoi.setBorder(javax.swing.BorderFactory.createTitledBorder("Nh\u1eadp th\u00f4ng tin kh\u00e1ch h\u00e0ng"));
        jLabel2.setText("H\u1ecd \u0111\u1ec7m");

        firstName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                firstNameKeyTyped(evt);
            }
        });

        jLabel3.setText("\u0110i c\u00f9ng");

        jLabel4.setText("S\u1ed1 CMT");

        jLabel5.setText("S\u1ed1 h\u1ed9 chi\u1ebfu");

        jLabel6.setText("Gi\u1edbi t\u00ednh");

        GioitinhG.add(sexMale);
        sexMale.setSelected(true);
        sexMale.setText("Nam");
        sexMale.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        sexMale.setMargin(new java.awt.Insets(0, 0, 0, 0));

        GioitinhG.add(sexFemale);
        sexFemale.setText("N\u1eef");
        sexFemale.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        sexFemale.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jLabel7.setText("Tu\u1ed5i");

        jLabel8.setText("\u0110i\u1ec7n tho\u1ea1i");

        jLabel9.setText("Th\u01b0 \u0111i\u1ec7n t\u1eed");

        jLabel10.setText("\u0110\u1ecba ch\u1ec9");

        jLabel11.setText("Qu\u1ed1c t\u1ecbch");

        address.setColumns(20);
        address.setRows(5);
        jScrollPane1.setViewportView(address);

        jLabel12.setText("Ghi ch\u00fa");

        detail.setColumns(20);
        detail.setRows(5);
        jScrollPane2.setViewportView(detail);

        customerId.setEditable(false);

        jLabel16.setText("X\u1ebfp v\u00e0o:");

        CustomerOld.add(Khachmoi);
        Khachmoi.setSelected(true);
        Khachmoi.setText("Kh\u00e1ch m\u1edbi");
        Khachmoi.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        Khachmoi.setMargin(new java.awt.Insets(0, 0, 0, 0));
        Khachmoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                KhachmoiMouseClicked(evt);
            }
        });

        CustomerOld.add(Khachcu);
        Khachcu.setText("Kh\u00e1ch quen");
        Khachcu.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        Khachcu.setMargin(new java.awt.Insets(0, 0, 0, 0));
        Khachcu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                KhachcuMouseClicked(evt);
            }
        });

        jButton3.setText("Th\u00eam");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Ho\u00e0n t\u1ea5t");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel18.setText("T\u00ean");

        org.jdesktop.layout.GroupLayout PanelKhachmoiLayout = new org.jdesktop.layout.GroupLayout(PanelKhachmoi);
        PanelKhachmoi.setLayout(PanelKhachmoiLayout);
        PanelKhachmoiLayout.setHorizontalGroup(
            PanelKhachmoiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(PanelKhachmoiLayout.createSequentialGroup()
                .addContainerGap()
                .add(PanelKhachmoiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(PanelKhachmoiLayout.createSequentialGroup()
                        .add(PanelKhachmoiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jLabel4)
                            .add(jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                            .add(jLabel8)
                            .add(jLabel9)
                            .add(jLabel5))
                        .add(26, 26, 26))
                    .add(PanelKhachmoiLayout.createSequentialGroup()
                        .add(jLabel16, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED))
                    .add(PanelKhachmoiLayout.createSequentialGroup()
                        .add(customerId, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED))
                    .add(PanelKhachmoiLayout.createSequentialGroup()
                        .add(jLabel18)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(PanelKhachmoiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(cbRooms, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(email)
                    .add(phone)
                    .add(visaCardNumb)
                    .add(idCardNumb)
                    .add(lastName)
                    .add(firstName)
                    .add(PanelKhachmoiLayout.createSequentialGroup()
                        .add(Khachmoi)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(Khachcu)))
                .add(14, 14, 14)
                .add(PanelKhachmoiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel7)
                    .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel10)
                    .add(jLabel6)
                    .add(jLabel12, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(PanelKhachmoiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .add(type, 0, 140, Short.MAX_VALUE)
                    .add(PanelKhachmoiLayout.createSequentialGroup()
                        .add(PanelKhachmoiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, age)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, sexMale))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(PanelKhachmoiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(PanelKhachmoiLayout.createSequentialGroup()
                                .add(sexFemale)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 64, Short.MAX_VALUE))
                            .add(PanelKhachmoiLayout.createSequentialGroup()
                                .add(jLabel11)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(country, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE))))
                    .add(PanelKhachmoiLayout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton4)))
                .addContainerGap())
        );
        PanelKhachmoiLayout.setVerticalGroup(
            PanelKhachmoiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(PanelKhachmoiLayout.createSequentialGroup()
                .add(PanelKhachmoiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(PanelKhachmoiLayout.createSequentialGroup()
                        .add(PanelKhachmoiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(PanelKhachmoiLayout.createSequentialGroup()
                                .add(6, 6, 6)
                                .add(PanelKhachmoiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(Khachmoi)
                                    .add(Khachcu)
                                    .add(jLabel6)))
                            .add(customerId, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(PanelKhachmoiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel2)
                            .add(PanelKhachmoiLayout.createSequentialGroup()
                                .add(firstName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(PanelKhachmoiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel3)
                                    .add(PanelKhachmoiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                        .add(lastName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(jLabel18))))))
                    .add(PanelKhachmoiLayout.createSequentialGroup()
                        .add(32, 32, 32)
                        .add(jLabel7)))
                .add(7, 7, 7)
                .add(PanelKhachmoiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(idCardNumb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel10))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(PanelKhachmoiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(visaCardNumb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(PanelKhachmoiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel8)
                    .add(phone, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(PanelKhachmoiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel9)
                    .add(email, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel12))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(PanelKhachmoiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel16)
                    .add(cbRooms, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
            .add(PanelKhachmoiLayout.createSequentialGroup()
                .add(7, 7, 7)
                .add(PanelKhachmoiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(PanelKhachmoiLayout.createSequentialGroup()
                        .add(46, 46, 46)
                        .add(type, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(PanelKhachmoiLayout.createSequentialGroup()
                        .add(PanelKhachmoiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(sexMale)
                            .add(sexFemale))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(PanelKhachmoiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(age, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel11)
                            .add(country, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 44, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(PanelKhachmoiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton3)
                    .add(jButton4)))
        );

        PanelKhachQuen.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh s\u00e1ch kh\u00e1ch h\u00e0ng c\u0169"));
        PanelKhachQuen.setEnabled(false);
        jLabel13.setText("Nh\u1eadp t\u00ean");

        Timtenkhach.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TimtenkhachKeyPressed(evt);
            }
        });

        jButton1.setText("T\u00ecm");

        Bangkhachhang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        Bangkhachhang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BangkhachhangMouseClicked(evt);
            }
        });

        jScrollPane3.setViewportView(Bangkhachhang);

        org.jdesktop.layout.GroupLayout PanelKhachQuenLayout = new org.jdesktop.layout.GroupLayout(PanelKhachQuen);
        PanelKhachQuen.setLayout(PanelKhachQuenLayout);
        PanelKhachQuenLayout.setHorizontalGroup(
            PanelKhachQuenLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(PanelKhachQuenLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel13)
                .add(15, 15, 15)
                .add(Timtenkhach, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 160, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(29, 29, 29)
                .add(jButton1)
                .addContainerGap(146, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
        );
        PanelKhachQuenLayout.setVerticalGroup(
            PanelKhachQuenLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(PanelKhachQuenLayout.createSequentialGroup()
                .add(PanelKhachQuenLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel13)
                    .add(Timtenkhach, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, PanelKhachQuen, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, PanelKhachmoi, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(PanelKhachmoi, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(PanelKhachQuen, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        pack();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        java.awt.Dimension dialogSize = getSize();
        setLocation((screenSize.width-dialogSize.width)/2,(screenSize.height-dialogSize.height)/2);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
// TODO add your handling code here:
       
        
        if (customerId.getText().equals(" ")) // nhập khách mới !
        {
         if (firstName.getText().equals("")||lastName.getText().equals(""))
                {
                 JOptionPane.showMessageDialog(this,"Bạn phải nhập họ và tên của khách hàng");
                }
                else
                {    
                    InsertNewCustomer();
                    String customerIdMax= new publicClass().selectDateToString("select Max(customerId) as cusMax from customers","cusMax");
                    AddCusInorder(customerIdMax,orderId.getText());
                    String roomId= new publicClass().selectDateToString("select roomid from rooms where roomnumb='"+cbRooms.getSelectedItem().toString()+"'","roomid"); 
                    new publicClass().SQLRUN("insert into roomcurent_detail (roomid,customerId) values('"+roomId+"','"+customerIdMax+"')");
                    String IdDetail=new publicClass().selectDateToString("select [id] from roomInorder where roomid=(select roomid from rooms where roomnumb='"+cbRooms.getSelectedItem()+"') and orderId='"+orderId.getText()+"' and getDate() between [Ngày đến ở] and enddate ","id");
                    String sqlUpdateRoomStatus="update orderDetail set roomstatus =5 where Id='"+IdDetail+"'";
                    new publicClass().SQLRUN(sqlUpdateRoomStatus);
                    new publicClass().SQLRUN("update orders set status=2 where orderid='"+orderId.getText()+"'");
                    new publicClass().addItemToTable(tblCusIinOrder,"select firstName +' '+ lastName as [Tên khách hàng] from CusInOrder where orderId='"+orderId.getText()+"'");
                    unfillAllFeid();
                }
        }
        else // chọn khách quen
        {  int countCusInOrder=new Integer( new publicClass().selectDateToString("select count (customerId) as CountCus from cusInOrders where orderId='"+orderId.getText()+"' and CusTomerId='"+customerId.getText()+"' ","CountCus"));
            if (countCusInOrder >0)
           { 
             int countCusInRoom=new Integer( new publicClass().selectDateToString("select count (customerId) as CountCusInr from roomcurent_detail where CusTomerId='"+customerId.getText()+"' ","CountCusInr"));
             if (countCusInRoom >0) 
                 {
                       JOptionPane.showMessageDialog(this,"Khách này đã có ");
                 }// khách đã đến ở trong phòng
             else // xêp phòng cho khách !
                 {
                    String roomId= new publicClass().selectDateToString("select roomid from rooms where roomnumb='"+cbRooms.getSelectedItem().toString()+"'","roomid"); 
                    new publicClass().SQLRUN("insert into roomcurent_detail (roomid,customerId) values('"+roomId+"','"+customerId.getText()+"')");
                    String IdDetail=new publicClass().selectDateToString("select [id] from roomInorder where roomid=(select roomid from rooms where roomnumb='"+cbRooms.getSelectedItem()+"') and orderId='"+orderId.getText()+"' and getDate() between [Ngày đến ở] and enddate ","id");
                    //String IdDetail=new publicClass().selectDateToString("select [id] from roomInorder where roomid=(select roomid from rooms where roomnumb='"+cbRooms.getSelectedItem()+"') and orderId='"+orderId.getText()+"'","id");
                    String sqlUpdateRoomStatus="update orderDetail set roomstatus =5 where Id='"+IdDetail+"'";
                    new publicClass().SQLRUN(sqlUpdateRoomStatus);
                    new publicClass().SQLRUN("update orders set status=2 where orderid='"+orderId.getText()+"'");
                    new publicClass().addItemToTable(tblCusIinOrder,"select  firstName +' '+ lastName as [Tên khách hàng] from CusInOrder where orderId='"+orderId.getText()+"'");
                    unfillAllFeid();
                    JOptionPane.showMessageDialog(this,"Người đặt hàng vừa được xếp phòng !");
                 } // xêp phòng cho khách !
             } // khách đã có ở đơn hàng
             else  // khách chưa có, vừa thêm vào đơn hàng vừa xếp phòng
             {
                AddCusInorder(customerId.getText(),orderId.getText());
                String roomId= new publicClass().selectDateToString("select roomid from rooms where roomnumb='"+cbRooms.getSelectedItem().toString()+"'","roomid"); 
                new publicClass().SQLRUN("insert into roomcurent_detail (roomid,customerId) values('"+roomId+"','"+customerId.getText()+"')");
                String IdDetail=new publicClass().selectDateToString("select [id] from roomInorder where roomid=(select roomid from rooms where roomnumb='"+cbRooms.getSelectedItem()+"') and orderId='"+orderId.getText()+"' and getDate() between [Ngày đến ở] and enddate ","id");
                String sqlUpdateRoomStatus="update orderDetail set roomstatus =5 where Id='"+IdDetail+"'";
                new publicClass().SQLRUN(sqlUpdateRoomStatus);
                new publicClass().SQLRUN("update orders set status=2 where orderid='"+orderId.getText()+"'");
                new publicClass().addItemToTable(tblCusIinOrder,"select  firstName +' '+ lastName as [Tên khách hàng] from CusInOrder where orderId='"+orderId.getText()+"'");
                unfillAllFeid();
             }
           }// khách quen
                
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
// TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void TimtenkhachKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TimtenkhachKeyPressed
// TODO add your handling code here:
          addItemToTable(Bangkhachhang,"select * from cusjointype where [Họ tên] like N'%"+Timtenkhach.getText()+"%'");
          new publicClass().hiddencol(Bangkhachhang,0);
    }//GEN-LAST:event_TimtenkhachKeyPressed
                    
    private void firstNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_firstNameKeyTyped
// TODO add your handling code here:
        if (Khachcu.isSelected()){
            addItemToTable(Bangkhachhang,"select * from cusjointype where firstname like '%"+firstName.getText()+"%' or lastname like '%"+lastName.getText()+"%'");
            
        }
    }//GEN-LAST:event_firstNameKeyTyped
        
    private void BangkhachhangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BangkhachhangMouseClicked
// TODO add your handling code here:
        Makhachhang= SelectedRowToString(Bangkhachhang,0);
        fillAllFeid();
        //Khachcu.setSelected(true);
        
        
        
    }//GEN-LAST:event_BangkhachhangMouseClicked
        
    private void KhachmoiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_KhachmoiMouseClicked
// TODO add your handling code here:
        PanelKhachQuen.setVisible(false);
        unfillAllFeid();
        
        
    }//GEN-LAST:event_KhachmoiMouseClicked
    
    private void KhachcuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_KhachcuMouseClicked
// TODO add your handling code here:
        // type.removeAllItems();
        //  addItemTooCombobox(type,"select name from customerstype","");
        unfillAllFeid();
        addItemToTable(Bangkhachhang,"select * from cusjointype");
        PanelKhachQuen.setVisible(true);
        
        //customerId.setText("");
    }//GEN-LAST:event_KhachcuMouseClicked
    private void DeleteCustomer(String cusId){
        if (Makhachhang!=null){
            int rt= JOptionPane.showConfirmDialog(this,"Bạn thực sự muốn xóa khách hàng có mã :"+Makhachhang+"\n tất cả các đơn hàng liên quan sẽ bị xóa","Cảnh báo",0);
            if (rt ==0) {
                int mkh = Integer.parseInt( customerId.getText());
                int mkhselect = Integer.parseInt(cusId);
                if  (mkh ==mkhselect){
                    unfillAllFeid();
                    addItemToTable(Bangkhachhang,"select * from cusjointype");
                }
                SQLRUN("execute clearorderofcus "+cusId) ;
                addItemToTable(Bangkhachhang,"select * from cusjointype");
                
            }
            
            Makhachhang=null;
            
        } else {
            JOptionPane.showMessageDialog(this,"Bạn phải chọn 1 khách để xóa");
        }
    }
    
    
    private void InsertNewCustomer() {
        
        String gioi ="";
        String cusType ="";
        cusType = selectDateToString("select customerTypeId from customerstype where name  =N'"+type.getSelectedItem().toString()+"'","customerTypeId");
        if (sexMale.isSelected()){gioi="Nam";
        }
        if (sexFemale.isSelected()){gioi="Nu";
        }
        
        String sql= "insert into customers (firstname,lastname,type,idCardNumb,visaCardNumb,sex,age,address,phone,email,country,detail)" +
                " values (N'"+firstName.getText()+"',N'"+lastName.getText()+"','"+cusType+"','"+idCardNumb.getText()+"',N'"+visaCardNumb.getText()+"','"+gioi+"','"+age.getText()+"',N'"+address.getText()+"','"+
                phone.getText()+"','"+email.getText()+"',N'"+country.getText()+"',N'"+detail.getText()+"')" ;
       //JOptionPane.showMessageDialog(this,sql);
        SQLRUN(sql);
        String GetCuid = selectDateToString("select max (customerid)as customerid from customers ","customerid");
        customerId.setText(GetCuid);
        
        
    }
    
    private void UpdateCustomer(String cusId){
       
            String gioi ="";
            String cusType ="";
            cusType = selectDateToString("select customerTypeId from customerstype where name  =N'"+type.getSelectedItem().toString()+"'","customerTypeId");
            if (sexMale.isSelected()){gioi="Nam";
            }
            if (sexFemale.isSelected()){gioi="Nu";
            }
            
            String sqlupdate ="update customers set firstname=N'"+firstName.getText()+"',lastname=N'"+lastName.getText()+"', type='"+cusType+"',idCardNumb='"+idCardNumb.getText()+"', visaCardNumb=N'"+
                    visaCardNumb.getText()+"',sex='"+gioi+"',age='"+age.getText()+"',address=N'"+address.getText()+"',phone='"+phone.getText()+
                    "',email='"+email.getText()+"',country=N'"+country.getText()+"',detail=N'"+detail.getText()+"' where customerid='"+cusId+"'";
            SQLRUN(sqlupdate);
            //JOptionPane.showMessageDialog(this,sqlupdate);
            
      
        
    }
    
    
    private void AddCusInorder(String CusID,String OID) {
       
            String sqlin="insert into cusInOrders (customerid,orderid) values ('" +
                    CusID+"','"+OID+"')";
           // JOptionPane.showMessageDialog(this,sqlin);
            SQLRUN(sqlin);
      
    }
    
    private void UpdateRespnseInOrder(String cusId,String note,String oId) {
        if ((cusId.equals(""))&&(oId.equals(""))){
            String insertorder ="update orders set customerid ='"+cusId+"',note=N'"+note+"' where orderid='"+oId+"'";
          //  JOptionPane.showMessageDialog(this,insertorder);
        } else {
            JOptionPane.showMessageDialog(this,"Chưa có mã đơn và mã khách để cập nhật");
        }
    }
    private  void askForAdd(String cusType,int checktye ) {
        String typeid =selectDateToString("select  customertypeid from customerstype where name ='"+cusType+"'","customertypeid");
        if (Integer.parseInt(typeid) != 1) {
            int tl= JOptionPane.showConfirmDialog(this,"Khách này không đi một mình, bạn có muốn thêm khách vào không?","Thong bao",0);
            if (tl==0){
                unfillAllFeid();
                Khachmoi.setSelected(true);
                isaddnew =true;
                type.removeAllItems();
                addItemTooCombobox(type,"select name from customerstype where customertypeid='"+typeid+"'","");
                
            } else {
                this.dispose();
            }
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new createOrderNew(String begindate, String enddate,Vector vt).setVisible(true);
            }
        });
    }
    // --
    // COPY Tu day di tat ca cac form
                                  /* import cac goi nay
                                    import java.sql.Connection;
                                    import java.sql.ResultSet;
                                    import java.sql.ResultSetMetaData;
                                    import java.sql.Statement;
                                    import javax.swing.JOptionPane;
                                    import javax.swing.JTable;
                                    import javax.swing.JTextField;
                                   
                                   */
    public void SQLRUN(String SQLTEXT) // Ham de chay cau truy van
    {
        try{
            Connection   conn = new connectDatabase().getConnection();
            Statement stm = conn.createStatement();
            stm.execute(SQLTEXT);
            conn.close();
            stm.close();
            System.out.println(SQLTEXT);
        } catch(Exception e){
            e.printStackTrace();
        }
    }
    public String  SelectedRowToString(JTable TableName, int CollNumb ) // Lay va In ten truong thu CollNumb ra  bietn ReturnValua, lay 1 bien
    {
        //int CollNumb ;
        //CollNumb=0;
        int  RowSelected;
        String ReturnValue;
        RowSelected = TableName.getSelectedRow();
        ReturnValue=TableName.getValueAt(RowSelected,CollNumb).toString();
        System.out.println(ReturnValue+" ");
        return ReturnValue;
        //System.out.println(TableName.getValueAt(RowSelected,CollNumb));
        
    }
    public void addItemTooCombobox(JComboBox ComboboxName,String sqlcb,String Firstchoice) // Dua du lieu tu cau truy van vao combobox, chi co 1 truong trong du lieu
    {
        //String sqlcb = "select TenTruogn from TenBang";
        //ComboboxName.addItem("Chon 1");
        if (Firstchoice !=""){
            ComboboxName.addItem(Firstchoice);
        }
        new sqlDatabase().addDataCombobox(sqlcb,ComboboxName);
    }
    
    public void addItemToTable(JTable TableName,String sqltb )// Lay du lieu tu cau truy van dua vao tabe, nhieu ten bang
    {
        
        //String sqltb=  "select * from Tenbang";
        new sqlDatabase().addDataTable(sqltb,TableName);
        new publicClass().hiddencol(Bangkhachhang,0);
        
    }
    
    public void addDataToTextField(String sql,String rsName,JTextField TexFiedName) // dua du lieu tu trong cau truy van vao bang
    {
        //Connection con =null;
        if(con == null){
            con = new connectDatabase().getConnection();
        }
        try{
            Statement sttm = con.createStatement();
            ResultSet rs = sttm.executeQuery(sql);
            while(rs.next()){
                TexFiedName.setText(rs.getString(rsName));
            }
            sttm.close();
            rs.close();
        } catch(Exception e){
            e.printStackTrace();
        }
    }
    public String selectDateToString(String sql,String rsName) // dua du lieu tu trong cau truy van ra bien string
    {
        String returnvl ="" ;
        //Connection con =null;
        if(con == null){
            con = new connectDatabase().getConnection();
        }
        try{
            Statement sttm = con.createStatement();
            ResultSet rs = sttm.executeQuery(sql);
            while(rs.next()){
                System.err.println(rs.getString(rsName));
                returnvl = rs.getString(rsName);
            }
            sttm.close();
            rs.close();
        } catch(Exception e){
            e.printStackTrace();
        }
        return returnvl;
    }
    
    
    //  Copy tu day di tat ca cac form
    private void unfillAllFeid(){
        //type.removeAllItems();
        // addItemTooCombobox(type,"select name from customerstype","");
        addDataToTextField("select max(customerId)+1 as customerId from customers ","customerId",customerId);
        customerId.setText(" ");
        firstName.setText("");
        lastName.setText("");
        idCardNumb.setText("");
        visaCardNumb.setText("");
        age.setText("");
        country.setText("");
        address.setText("");
        phone.setText("");
        email.setText("");
        detail.setText("");
        sexMale.setSelected(true);
        
    }
    private void fillAllFeid(){
        // Connection con = null ;
        String sql1 ="select * from customers where customerid= '"+Makhachhang+"'" ;
        String sql2 ="select customerId,firstname,lastname,idCardNumb,visaCardNumb,age,address,phone,email,country,detail from customers where customerid= '"+Makhachhang+"'" ;
        
        if(con == null){
            con = new connectDatabase().getConnection();
        }
        try{
            
            Statement sttm1 = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
                    
            ResultSet rs1 = sttm1.executeQuery(sql2);
            while (rs1.next()){
                customerId.setText(rs1.getString("customerId"));
                firstName.setText(rs1.getString("firstName"));
                lastName.setText(rs1.getString("lastName"));
                
                idCardNumb.setText(rs1.getString("idCardNumb"));
                visaCardNumb.setText(rs1.getString("visaCardNumb"));
                  
                age.setText(rs1.getString("age"));
                address.setText(rs1.getString("address"));
                phone.setText(rs1.getString("phone"));
                email.setText(rs1.getString("email"));
                country.setText(rs1.getString("country"));
                detail.setText(rs1.getString("detail"));
                
           
           }
            sttm1.close();
            rs1.close();
            Statement sttm2 = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
            ResultSet rs2 = sttm2.executeQuery(sql1);
            while(rs2.next()){
                // dua du lieu vao cac truong
               
                type.removeAllItems();
                addItemTooCombobox(type,"select name from customerstype where customerTypeId='"+rs2.getString("type")+"'","");
                addItemTooCombobox(type,"select name from customerstype where customerTypeId <>'"+rs2.getString("type")+"'","");
                
                if (rs2.getString("sex").equals("Nam")){
                    System.out.println(rs2.getString("sex"));
                    sexMale.setSelected(true);
                    
                }
                if (rs2.getString("sex").equals("Nu")){
                    System.out.println(rs2.getString("sex"));
                    sexFemale.setSelected(true);
                    
                }
              
                
                // hoan tat dua du lieu vao cac truong
            }
            
            sttm2.close();
           
            rs2.close();
        } catch(Exception e){
            e.printStackTrace();
        }
    }
    
    // bien tu tao
    String Makhachhang;
    Connection con ;
    boolean isaddnew = false;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Bangkhachhang;
    private javax.swing.ButtonGroup CustomerOld;
    private javax.swing.ButtonGroup GioitinhG;
    private javax.swing.JRadioButton Khachcu;
    private javax.swing.JRadioButton Khachmoi;
    private javax.swing.JTextField Note;
    private javax.swing.JPanel PanelKhachQuen;
    private javax.swing.JPanel PanelKhachmoi;
    private javax.swing.JTextField Timtenkhach;
    private javax.swing.JTextArea address;
    private javax.swing.JTextField age;
    private javax.swing.JComboBox cbRooms;
    private javax.swing.JTextField country;
    private javax.swing.JTextField customerId;
    private javax.swing.JTextArea detail;
    private javax.swing.JTextField email;
    private javax.swing.JTextField firstName;
    private javax.swing.JTextField idCardNumb;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField lastName;
    private javax.swing.JTextField orderId;
    private javax.swing.JTextField orderdate;
    private javax.swing.JTextField phone;
    private javax.swing.JRadioButton sexFemale;
    private javax.swing.JRadioButton sexMale;
    private javax.swing.JTable tblCusIinOrder;
    private javax.swing.JComboBox type;
    private javax.swing.JTextField visaCardNumb;
    // End of variables declaration//GEN-END:variables
    
}
